{"ast":null,"code":"/* import React, { useState } from 'react';\nimport './eliminar.css'; \n\nconst Eliminar = ({ data }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n\n  const toggleSelection = (item) => {\n    if (selectedItems.includes(item)) {\n      setSelectedItems(selectedItems.filter((selected) => selected !== item));\n    } else {\n      setSelectedItems([...selectedItems, item]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(data.map((item) => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n\n  const handleDelete = () => {\n    if (selectedItems.length === 0) {\n      alert('No se han seleccionado elementos para eliminar.');\n      return;\n    }\n  \n    fetch('http://localhost:7777/api/Indicadores', {\n      method: 'DELETE', \n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ selectedItems }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Error al eliminar elementos');\n        }\n      })\n      .then((data) => {\n        alert('Elementos eliminados con éxito.');\n        setSelectedItems([]);\n      })\n      .catch((error) => {\n        console.error('Error al eliminar elementos:', error);\n        alert('Error al eliminar elementos. Consulta el registro de la consola para obtener más detalles.');\n      });\n  };\n  \n\n  return (\n    <div className=\"eliminar-container\">\n      <h2>Eliminar Elementos</h2>\n      <button onClick={handleSelectAll}>\n        {selectAll ? 'Deseleccionar todo' : 'Seleccionar todo'}\n      </button>\n      <button onClick={handleDelete}>Eliminar seleccionados</button>\n      <table className=\"eliminar-tabla\">\n        <thead>\n          <tr>\n            <th>Seleccionar</th>\n            <th>Indicador</th>\n            <th>Descripción</th>\n            <th>...</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item) => (\n            <tr key={item.id} className={selectedItems.includes(item.id) ? 'selected' : ''}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.includes(item.id)}\n                  onChange={() => toggleSelection(item.id)}\n                />\n              </td>\n              <td>{item.indicador}</td>\n              <td>{item.descripcion}</td>\n              <td>...</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Eliminar;\n */","map":{"version":3,"names":[],"sources":["/home/Corvus-138/Videos/proyecyo-filtro-grupo/frontend/src/componete/eliminar.js"],"sourcesContent":["/* import React, { useState } from 'react';\nimport './eliminar.css'; \n\nconst Eliminar = ({ data }) => {\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectAll, setSelectAll] = useState(false);\n\n  const toggleSelection = (item) => {\n    if (selectedItems.includes(item)) {\n      setSelectedItems(selectedItems.filter((selected) => selected !== item));\n    } else {\n      setSelectedItems([...selectedItems, item]);\n    }\n  };\n\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedItems([]);\n    } else {\n      setSelectedItems(data.map((item) => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n\n  const handleDelete = () => {\n    if (selectedItems.length === 0) {\n      alert('No se han seleccionado elementos para eliminar.');\n      return;\n    }\n  \n    fetch('http://localhost:7777/api/Indicadores', {\n      method: 'DELETE', \n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ selectedItems }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Error al eliminar elementos');\n        }\n      })\n      .then((data) => {\n        alert('Elementos eliminados con éxito.');\n        setSelectedItems([]);\n      })\n      .catch((error) => {\n        console.error('Error al eliminar elementos:', error);\n        alert('Error al eliminar elementos. Consulta el registro de la consola para obtener más detalles.');\n      });\n  };\n  \n\n  return (\n    <div className=\"eliminar-container\">\n      <h2>Eliminar Elementos</h2>\n      <button onClick={handleSelectAll}>\n        {selectAll ? 'Deseleccionar todo' : 'Seleccionar todo'}\n      </button>\n      <button onClick={handleDelete}>Eliminar seleccionados</button>\n      <table className=\"eliminar-tabla\">\n        <thead>\n          <tr>\n            <th>Seleccionar</th>\n            <th>Indicador</th>\n            <th>Descripción</th>\n            <th>...</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item) => (\n            <tr key={item.id} className={selectedItems.includes(item.id) ? 'selected' : ''}>\n              <td>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.includes(item.id)}\n                  onChange={() => toggleSelection(item.id)}\n                />\n              </td>\n              <td>{item.indicador}</td>\n              <td>{item.descripcion}</td>\n              <td>...</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Eliminar;\n */"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}